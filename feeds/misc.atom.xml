<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pythux</title><link href="http://remusao.github.com/" rel="alternate"></link><link href="http://remusao.github.com/feeds/misc.atom.xml" rel="self"></link><id>http://remusao.github.com/</id><updated>2014-02-14T22:00:42+01:00</updated><entry><title>Installation de Julia</title><link href="http://remusao.github.com/installation-de-julia.html" rel="alternate"></link><updated>2014-02-14T22:00:42+01:00</updated><author><name>Pythux</name></author><id>tag:remusao.github.com,2014-02-14:installation-de-julia.html</id><summary type="html">&lt;p&gt;Suite au premier article sur le langage Julia, voici un guide rapide de mise en
route de votre environnement pour utiliser le langage. Voici le plan :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compiler Julia depuis les sources&lt;/li&gt;
&lt;li&gt;Coloration syntaxique et indentation sous vim&lt;/li&gt;
&lt;li&gt;Environnement IJulia (équivalement de IPython)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Compilation&lt;/h2&gt;
&lt;p&gt;Tout d'abord compiler l'interpréteur Julia depuis les sources. Notez que si
votre distribution &lt;em&gt;linux&lt;/em&gt; dispose d'un paquet Julia dans ses dépôt ou si vous
ne désirez pas compiler Julia depuis les sources, il est toujours possible
d'installer une version pré-compilée depuis la
&lt;a href="http://julialang.org/downloads/"&gt;page téléchargement&lt;/a&gt; du site officiel.&lt;/p&gt;
&lt;p&gt;Commençons tout d'abord par récupérer les sources de Julia :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/JuliaLang/julia.git
&lt;span class="nb"&gt;cd &lt;/span&gt;julia
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ensuite, vérifiez que les dépendances suivantes sont bien disponibles sur votre
système :
&lt;em&gt; &lt;a href="http://www.gnu.org/software/make/"&gt;GNU make&lt;/a&gt;
&lt;/em&gt; &lt;a href="http://gcc.gnu.org/"&gt;gcc et g++&lt;/a&gt; (ou &lt;a href="http://clang.llvm.org/"&gt;Clang&lt;/a&gt;)
&lt;em&gt; &lt;a href="http://gcc.gnu.org/"&gt;gfortran&lt;/a&gt;
&lt;/em&gt; &lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt;
&lt;em&gt; &lt;a href="http://www.perl.org/"&gt;perl&lt;/a&gt;
&lt;/em&gt; &lt;a href="http://www.gnu.org/software/wget/"&gt;wget&lt;/a&gt; (ou &lt;a href="http://curl.haxx.se/"&gt;curl&lt;/a&gt;, ou &lt;em&gt;fetch&lt;/em&gt;)
&lt;em&gt; &lt;a href="http://www.gnu.org/software/m4/"&gt;m4&lt;/a&gt;
&lt;/em&gt; &lt;a href="http://www.gnu.org/software/patch/"&gt;patch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Si tout est installé, lancez la compilation (notez que &lt;strong&gt;N&lt;/strong&gt; est à remplacer
par le nombre de cœurs dont dispose votre processeur, cela peut grandement
améliorer le temps de compilation) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;make -j N
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;La première fois que vous compilez Julia, des dépendances vont être téléchargées
puis compilées, c'est pourquoi cela peut prendre un certains temps. La
compilation peut consommer jusqu'à &lt;em&gt;700 Mo de mémoire&lt;/em&gt; et &lt;em&gt;1.5 Go d'espace
disque&lt;/em&gt;. Les éventuelles compilations futures seront moins gourmandes.&lt;/p&gt;
&lt;p&gt;Une fois la compilation terminée, vous disposez d'un
&lt;a href="http://en.wikipedia.org/wiki/Symbolic_link"&gt;lien symbolique&lt;/a&gt; vers l'exécutable
Julia. Afin qu'il soit accessible depuis n'importe quel endroit, vous pouvez
le rajouter à votre &lt;code&gt;PATH&lt;/code&gt; (vous pouvez le rajouter dans le fichier de
configuration de votre Shell favori en remplaçant &lt;code&gt;$(pwd)&lt;/code&gt; par le chemin
absolu vers le dossier julia dans lequel se trouve le lien symbolique) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Julia intègre tout le nécessaire pour gérer l'installation, la mise à jour
et la création de packages. Ces fonctionnalités sont disponibles depuis un
prompt Julia. La première fois que vous lancez Julia, il est nécessaire
d'initialiser les packages :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;julia
julia&amp;gt; Pkg.update&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Les principales commandes disponibles sont :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pkg.update()&lt;/strong&gt; : met à jours les différents packages installés&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pkg.add("Package")&lt;/strong&gt; : installe le package &lt;em&gt;Package&lt;/em&gt; ainsi que ses éventuelles dépendances&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pkg.rm("Package")&lt;/strong&gt; : supprime le package &lt;em&gt;Package&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Coloration syntaxique et indentation&lt;/h2&gt;
&lt;p&gt;Cette explication n'est valide que pour les utilisateurs de l'éditeur
&lt;a href="http://www.vim.org/"&gt;Vim&lt;/a&gt;. Voici des explications différentes en
fonction de la manière dont vous gérez les extensions.&lt;/p&gt;
&lt;h4&gt;Pathogen&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.vim
mkdir -p bundle &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;bundle
git clone git://github.com/JuliaLang/julia-vim.git
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Vundle&lt;/h4&gt;
&lt;p&gt;Ajouter un nouveau Bundle à votre &lt;code&gt;.vimrc&lt;/code&gt; :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Bundle &lt;span class="s1"&gt;&amp;#39;JuliaLang/julia-vim&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Lancer Vim et mettre à jour vos Bundle :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;:BundleInstall!
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Manuel&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone git://github.com/JuliaLang/julia-vim.git
&lt;span class="nb"&gt;cd &lt;/span&gt;julia-vim
cp -R * ~/.vim
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Voilà qui devrait vous fournir la coloration syntaxique ainsi que l'indentation
pour les fichier dont l'extension et &lt;code&gt;.jl&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;IJulia&lt;/h2&gt;
&lt;p&gt;IJulia permet d'interfacer Julia à l'environnement de développement interactif
&lt;strong&gt;IPython&lt;/strong&gt;. Cela permet notamment d'utiliser le mode &lt;strong&gt;notebook&lt;/strong&gt;, qui combine
du code, du texte, et des contenus multimédias (dessin, etc.) dans un même
environnement. Pour l'installer vous aurez besoin d'avoir sur votre système :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IPython&lt;/strong&gt; en version &lt;code&gt;1.0&lt;/code&gt; ou supérieure&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jinja.pocoo.org/docs/"&gt;Jinja2&lt;/a&gt;, &lt;a href="http://www.tornadoweb.org/en/stable/"&gt;Tornado&lt;/a&gt;, et &lt;a href="https://github.com/zeromq/pyzmq"&gt;pyzmq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ensuite il faut installer le package IJulia depuis un prompt julia :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;julia&lt;/span&gt;
&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;IJulia&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;julia&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Pkg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Une fois ceci fait, vous n'avez plus qu'à lancer IPython de la manière
suivante. Pour le mode notebook :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ipython notebook --profile julia
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Et voilà, le tour est joué. C'est tout pour cet article. Vous devriez
normalement avoir de quoi démarrer à programmer en Julia et exécuter
vos programmes. A bientôt pour de nouvelles aventures !&lt;/p&gt;
&lt;p&gt;Afin de réaliser cet articles je me suis inspiré de la documentation présente
sur les dépôts officiels de &lt;a href="https://github.com/JuliaLang/julia"&gt;Julia&lt;/a&gt;,
&lt;a href="https://github.com/JuliaLang/julia-vim"&gt;julia-vim&lt;/a&gt; et
&lt;a href="https://github.com/JuliaLang/IJulia.jl"&gt;IJulia&lt;/a&gt;.&lt;/p&gt;</summary></entry></feed>